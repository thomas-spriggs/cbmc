/// \file
/// This set of definitions is used as part of the
/// [X-macro](https://en.wikipedia.org/wiki/X_Macro) pattern. These define the
/// set of bitvector theory functions which are implemented and it is used to
/// automate repetitive parts of the implementation.
SMT_BITVECTOR_THEORY_OPERATOR(bvult, unsigned_less_than, smt_bool_sortt{})
SMT_BITVECTOR_THEORY_OPERATOR(bvule, unsigned_less_than_or_equal, smt_bool_sortt{})
SMT_BITVECTOR_THEORY_OPERATOR(bvugt, unsigned_greater_than, smt_bool_sortt{})
SMT_BITVECTOR_THEORY_OPERATOR(bvuge, unsigned_greater_than_or_equal, smt_bool_sortt{})
SMT_BITVECTOR_THEORY_OPERATOR(bvslt, signed_less_than, smt_bool_sortt{})
SMT_BITVECTOR_THEORY_OPERATOR(bvsle, signed_less_than_or_equal, smt_bool_sortt{})
SMT_BITVECTOR_THEORY_OPERATOR(bvsgt, signed_greater_than, smt_bool_sortt{})
SMT_BITVECTOR_THEORY_OPERATOR(bvsge, signed_greater_than_or_equal, smt_bool_sortt{})
// Arithmetic operators, probably to be spun out to their own macro
SMT_BITVECTOR_THEORY_OPERATOR(bvadd, bitvector_addition, left.get_sort())
SMT_BITVECTOR_THEORY_OPERATOR(bvsub, bitvector_subtraction, left.get_sort())
SMT_BITVECTOR_THEORY_OPERATOR(bvmul, bitvector_multiplication, left.get_sort())
SMT_BITVECTOR_THEORY_OPERATOR(bvudiv, bitvector_division, left.get_sort())
SMT_BITVECTOR_THEORY_OPERATOR(bvurem, bitvector_modulus, left.get_sort())
// Unary operator, implemented in terms of binary operator
//SMT_BITVECTOR_THEORY_OPERATOR(bvneg, bitvector_negation)
